files:
  - Spring
  - Elide Standalone

Spring: |+2
  ```yaml
  elide:
    async:
      thread-pool-size: 10
      max-async-after: 30s
      cleanup:
        enabled: true
          query-max-run-time: 120s
          query-retention-duration: 10d
          query-cancellation-check-interval: 600s
      export:
        enabled: true
        path: /export
        storage-destination: /tmp
        format:
          csv:
            write-header: true
  ```

Elide Standalone: |+2
  ```java
  @Override
  public ElideStandaloneAsyncSettings getAsyncProperties() {
      ElideStandaloneAsyncSettings asyncProperties = new ElideStandaloneAsyncSettings() {
          @Override
          public Integer getThreadSize() {
              return 10;
          }

          @Override
          public Duration getQueryMaxRunTime() {
              return Duration.ofSeconds(120L);
          }

          @Override
          public Duration getQueryRetentionDuration() {
              return Duration.ofDays(10L);
          }

          @Override
          public Duration getQueryCancellationCheckInterval() {
              return Duration.ofSeconds(600L);
          }

          @Override
          public Duration getMaxAsyncAfter() {
              return Duration.ofSeconds(30L);
          }

          @Override
          public String getExportApiPathSpec() {
              return "/export/*";
          }

          @Override
          boolean enableExport() {
              return false;
          }

          @Override
          public boolean appendFileExtension() {
              return true;
          }

          @Override
          public boolean csvWriteHeader() {
              return false;
          }

          @Override
          public String getStorageDestination() {
              return "/tmp";
          }

          @Override
          public Duration getExportAsyncResponseTimeout() {
              return Duration.ofSeconds(30L);
          }

          @Override
          public ExecutorService getExportAsyncResponseExecutor() {
              return enableExport() ? Executors.newFixedThreadPool(getThreadSize() == null ? 6 : getThreadSize()) : null;
          }
      }
      return asyncProperties;
  }
  ```
